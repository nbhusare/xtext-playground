/*
 * generated by Xtext 2.22.0
 */

package org.xtext.example.uidsl.tests

import com.google.inject.Inject
import com.google.inject.Provider
import org.eclipse.xtext.resource.XtextResourceSet
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.validation.ValidationTestHelper
import org.junit.Test
import org.junit.runner.RunWith
import org.xtext.example.uidsl.tests.helper.SmartParseHelper
import org.xtext.example.uidsl.uiDsl.UiDslPackage
import org.xtext.example.uidsl.uiDsl.UiModelFile

import static org.junit.Assert.assertNotNull

@RunWith(XtextRunner)
@InjectWith(UiDslInjectorProvider)
class UiDslValidatorTest {

	@Inject extension SmartParseHelper

	@Inject Provider<XtextResourceSet> resourceSetProvider

	@Inject extension ValidationTestHelper

	@Test
	def void validateModel() {
		val rs = resourceSetProvider.get

		val model = '''abstract model Account'''.parse(rs, "model")
		assertNotNull(model)

		val uiModelFile = '''ui AccountUi for Account'''.parse(rs, "ui") as UiModelFile
		assertNotNull(uiModelFile)

		uiModelFile.uiModels.head => [
			assertError(UiDslPackage.Literals.UI_MODEL, "", "Cannot create ui-model for an abstract model")
		]
	}
}
